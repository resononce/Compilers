Comparing files Strings.btm.ast.ref and STRINGS.BTM.AST
***** Strings.btm.ast.ref
// Source file: Strings.btm
// Source line: 1
class Main extends Object {
    // Source line: 2
    void main() {
        // Source line: 3
        String s = (/*L3*/"abcdefghijklmnopqrstuvwxyz");
        // Source line: 4
        String s2 = (/*L4*/"abcdefghijklmnopqrstuvwxyz");
        // Source line: 5
        String s3 = (/*L5*/"0123456789");
        // Source line: 7
        (/*L7*/(/*L7*/(/*L7*/(/*L7*/new TextIO()).putString((/*L7*/"s: "))).putString((/*L7*/s))).putString((/*L7*/"\n")));
        // Source line: 9
        (/*L9*/(/*L9*/(/*L9*/(/*L9*/new TextIO()).putString((/*L9*/"s.length(): "))).putInt((/*L9*/(/*L9*/s).length()))).putStr
ing((/*L9*/"\n")));
        // Source line: 11
        (/*L11*/(/*L11*/(/*L11*/(/*L11*/new TextIO()).putString((/*L11*/"s2: "))).putString((/*L11*/s2))).putString((/*L11*/"\n
")));
        // Source line: 12
        (/*L12*/(/*L12*/(/*L12*/(/*L12*/new TextIO()).putString((/*L12*/"s2.length(): "))).putInt((/*L12*/(/*L12*/s2).length())
)).putString((/*L12*/"\n")));
        // Source line: 14
        if ((/*L14*/(/*L14*/s).equals((/*L14*/s2))))
            // Source line: 15
            (/*L15*/(/*L15*/new TextIO()).putString((/*L15*/"s.equals(s2): true\n")));
        else
            // Source line: 17
            (/*L17*/(/*L17*/new TextIO()).putString((/*L17*/"s.equals(s2): false\n")));
        // Source line: 18
        if ((/*L18*/(/*L18*/s2).equals((/*L18*/s))))
            // Source line: 19
            (/*L19*/(/*L19*/new TextIO()).putString((/*L19*/"s2.equals(s): true\n")));
        else
            // Source line: 21
            (/*L21*/(/*L21*/new TextIO()).putString((/*L21*/"s2.equals(s): false\n")));
        // Source line: 23
        (/*L23*/(/*L23*/(/*L23*/(/*L23*/new TextIO()).putString((/*L23*/"s3: "))).putString((/*L23*/s3))).putString((/*L23*/"\n
")));
        // Source line: 24
        (/*L24*/(/*L24*/(/*L24*/(/*L24*/new TextIO()).putString((/*L24*/"s3.length(): "))).putInt((/*L24*/(/*L24*/s3).length())
)).putString((/*L24*/"\n")));
        // Source line: 26
        if ((/*L26*/(/*L26*/s).equals((/*L26*/s3))))
            // Source line: 27
            (/*L27*/(/*L27*/new TextIO()).putString((/*L27*/"s.equals(s3): true\n")));
        else
            // Source line: 29
            (/*L29*/(/*L29*/new TextIO()).putString((/*L29*/"s.equals(s3): false\n")));
        // Source line: 30
        if ((/*L30*/(/*L30*/s3).equals((/*L30*/s))))
            // Source line: 31
            (/*L31*/(/*L31*/new TextIO()).putString((/*L31*/"s3.equals(s): true\n")));
        else
            // Source line: 33
            (/*L33*/(/*L33*/new TextIO()).putString((/*L33*/"s3.equals(s): false\n")));
        // Source line: 35
        (/*L35*/(/*L35*/(/*L35*/(/*L35*/new TextIO()).putString((/*L35*/"s.concat(s2): "))).putString((/*L35*/(/*L35*/s).concat
((/*L35*/s2))))).putString((/*L35*/"\n")));
        // Source line: 36
        (/*L36*/(/*L36*/(/*L36*/(/*L36*/new TextIO()).putString((/*L36*/"s2.concat(s): "))).putString((/*L36*/(/*L36*/s2).conca
t((/*L36*/s))))).putString((/*L36*/"\n")));
        // Source line: 38
        (/*L38*/(/*L38*/(/*L38*/(/*L38*/new TextIO()).putString((/*L38*/"s.concat(s3): "))).putString((/*L38*/(/*L38*/s).concat
((/*L38*/s3))))).putString((/*L38*/"\n")));
        // Source line: 39
        (/*L39*/(/*L39*/(/*L39*/(/*L39*/new TextIO()).putString((/*L39*/"s3.concat(s): "))).putString((/*L39*/(/*L39*/s3).conca
t((/*L39*/s))))).putString((/*L39*/"\n")));
        // Source line: 43
        (/*L43*/(/*L43*/(/*L43*/(/*L43*/new TextIO()).putString((/*L43*/"s.substring(0, 0): "))).putString((/*L43*/(/*L43*/s).s
ubstring((/*L43*/0), (/*L43*/0))))).putString((/*L43*/"\n")));
        // Source line: 44
        (/*L44*/(/*L44*/(/*L44*/(/*L44*/new TextIO()).putString((/*L44*/"s.substring(2, 8): "))).putString((/*L44*/(/*L44*/s).s
ubstring((/*L44*/2), (/*L44*/8))))).putString((/*L44*/"\n")));
        // Source line: 45
        (/*L45*/(/*L45*/(/*L45*/(/*L45*/new TextIO()).putString((/*L45*/"s2.substring(1, 2): "))).putString((/*L45*/(/*L45*/s2)
.substring((/*L45*/1), (/*L45*/2))))).putString((/*L45*/"\n")));
        // Source line: 46
        (/*L46*/(/*L46*/(/*L46*/(/*L46*/new TextIO()).putString((/*L46*/"s2.substring(1, 7): "))).putString((/*L46*/(/*L46*/s2)
.substring((/*L46*/1), (/*L46*/7))))).putString((/*L46*/"\n")));
        // Source line: 47
        (/*L47*/(/*L47*/(/*L47*/(/*L47*/new TextIO()).putString((/*L47*/"s3.substring(2, 7): "))).putString((/*L47*/(/*L47*/s3)
.substring((/*L47*/2), (/*L47*/7))))).putString((/*L47*/"\n")));
        // Source line: 48
        (/*L48*/(/*L48*/(/*L48*/(/*L48*/new TextIO()).putString((/*L48*/"s3.substring(1, 10): "))).putString((/*L48*/(/*L48*/s3
).substring((/*L48*/1), (/*L48*/10))))).putString((/*L48*/"\n")));
        // Source line: 50
        return;
    }
}
***** STRINGS.BTM.AST

C:\Users\Resononce\Documents\Projects\Compilers\A3\a3\tests>java -classpath "C:\Users\Resononce\Documents\Projects\Compilers\A3
\a3\src" Main Strings.btm 
Strings.btm:1:syntactic error: Encountered " <UNSUPPORTEDCHAR> "\r "" at line 1, column 13.
Was expecting one of:
    "}" ...
    <ID> ...
    

Stopping compilation due to errors
1 error(s)
*****

