// Source file: VectorTest.btm
// Source line: 4
class Main extends Object {
    // Source line: 5
    TextIO io = 
(/*L5*/new TextIO());
    // Source line: 6
    Vector v = 
(/*L6*/new Vector());
    // Source line: 8
    void main() {
        // Source line: 9
        (/*L9*/(/*L9*/this).test1());
        // Source line: 10
        (/*L10*/(/*L10*/this).test2());
        // Source line: 11
        return;
    }
    // Source line: 14
    void printVector() {
        // Source line: 15
        int i = (/*L15*/0);
        // Source line: 16
        while ((/*L16*/(/*L16*/i) < (/*L16*/(/*L16*/v).size())))
            // Source line: 16
            {
                // Source line: 17
                (/*L17*/(/*L17*/(/*L17*/(/*L17*/io).putString((/*L17*/"Element "))).putInt((/*L17*/i))).putString((/*L17*/": ")));
                // Source line: 18
                if ((/*L18*/(/*L18*/(/*L18*/v).elementAt((/*L18*/i))) instanceof Boolean))
                    // Source line: 18
                    {
                        // Source line: 19
                        Boolean b = (/*L19*/(Boolean)((/*L19*/(/*L19*/v).elementAt((/*L19*/i)))));
                        // Source line: 20
                        (/*L20*/(/*L20*/io).putString((/*L20*/"Boolean (")));
                        // Source line: 21
                        if ((/*L21*/(/*L21*/b).booleanValue()))
                            // Source line: 22
                            (/*L22*/(/*L22*/io).putString((/*L22*/"true)\n")));
                        else
                            // Source line: 24
                            (/*L24*/(/*L24*/io).putString((/*L24*/"false)\n")));
                    }
                else
                    // Source line: 26
                    if ((/*L26*/(/*L26*/(/*L26*/v).elementAt((/*L26*/i))) instanceof Integer))
                        // Source line: 26
                        {
                            // Source line: 27
                            Integer integer = (/*L27*/(Integer)((/*L27*/(/*L27*/v).elementAt((/*L27*/i)))));
                            // Source line: 28
                            (/*L28*/(/*L28*/(/*L28*/(/*L28*/io).putString((/*L28*/"Integer ("))).putInt((/*L28*/(/*L28*/integer).intValue()))).putString((/*L28*/")\n")));
                        }
                    else
                        // Source line: 30
                        if ((/*L30*/(/*L30*/(/*L30*/v).elementAt((/*L30*/i))) instanceof String))
                            // Source line: 30
                            {
                                // Source line: 31
                                String s = (/*L31*/(String)((/*L31*/(/*L31*/v).elementAt((/*L31*/i)))));
                                // Source line: 32
                                (/*L32*/(/*L32*/(/*L32*/(/*L32*/io).putString((/*L32*/"String ("))).putString((/*L32*/s))).putString((/*L32*/")\n")));
                            }
                        else
                            // Source line: 30
                            {
                            }
                // Source line: 34
                (/*L34*/i = (/*L34*/(/*L34*/i) + (/*L34*/1)));
            }
        // Source line: 37
        return;
    }
    // Source line: 40
    void test1() {
        // Source line: 41
        Integer integer = (/*L41*/(/*L41*/new Integer()).init((/*L41*/5)));
        // Source line: 42
        Boolean b = (/*L42*/(/*L42*/new Boolean()).init((/*L42*/true)));
        // Source line: 43
        String s = (/*L43*/"abc");
        // Source line: 45
        (/*L45*/(/*L45*/v).addElement((/*L45*/integer)));
        // Source line: 46
        (/*L46*/(/*L46*/io).putString((/*L46*/"Added Integer (5) to Vector\n")));
        // Source line: 48
        (/*L48*/(/*L48*/io).putString((/*L48*/"Printing vector:\n")));
        // Source line: 49
        (/*L49*/(/*L49*/this).printVector());
        // Source line: 51
        (/*L51*/(/*L51*/v).addElementAt((/*L51*/b), (/*L51*/0)));
        // Source line: 52
        (/*L52*/(/*L52*/io).putString((/*L52*/"Added Boolean (true) to first position (0th) of Vector\n")));
        // Source line: 54
        (/*L54*/(/*L54*/io).putString((/*L54*/"Printing vector:\n")));
        // Source line: 55
        (/*L55*/(/*L55*/this).printVector());
        // Source line: 57
        (/*L57*/(/*L57*/v).addElement((/*L57*/s)));
        // Source line: 58
        (/*L58*/(/*L58*/io).putString((/*L58*/"Added String (\"abc\") to end of vector\n")));
        // Source line: 60
        (/*L60*/(/*L60*/io).putString((/*L60*/"Printing vector:\n")));
        // Source line: 61
        (/*L61*/(/*L61*/this).printVector());
        // Source line: 63
        (/*L63*/(/*L63*/io).putString((/*L63*/"Attempting to get Boolean from Vector using elementAt(0)...")));
        // Source line: 64
        Boolean b2 = (/*L64*/(Boolean)((/*L64*/(/*L64*/v).elementAt((/*L64*/0)))));
        // Source line: 65
        if ((/*L65*/(/*L65*/b) != (/*L65*/b2)))
            // Source line: 65
            {
                // Source line: 66
                (/*L66*/(/*L66*/io).putString((/*L66*/"Error: first element Boolean does not equal original\n")));
                // Source line: 67
                (/*L67*/(/*L67*/new Sys()).exit((/*L67*/1)));
            }
        else
            // Source line: 69
            if ((/*L69*/!((/*L69*/(/*L69*/v).contains((/*L69*/b2))))))
                // Source line: 69
                {
                    // Source line: 70
                    (/*L70*/(/*L70*/io).putString((/*L70*/"Error: Vector contains() failed to find Boolean\n")));
                    // Source line: 71
                    (/*L71*/(/*L71*/new Sys()).exit((/*L71*/1)));
                }
            else
                // Source line: 69
                {
                }
        // Source line: 73
        (/*L73*/(/*L73*/io).putString((/*L73*/"successful\n")));
        // Source line: 74
        (/*L74*/(/*L74*/io).putString((/*L74*/"Attempting to remove Boolean from Vector using removeElementAt(0)...")));
        // Source line: 75
        (/*L75*/(/*L75*/v).removeElementAt((/*L75*/0)));
        // Source line: 76
        if ((/*L76*/(/*L76*/v).contains((/*L76*/b2))))
            // Source line: 76
            {
                // Source line: 77
                (/*L77*/(/*L77*/io).putString((/*L77*/"Error: tried to remove Boolean and still in the Vector\n")));
                // Source line: 78
                (/*L78*/(/*L78*/new Sys()).exit((/*L78*/1)));
            }
        else
            // Source line: 80
            if ((/*L80*/(/*L80*/(/*L80*/v).size()) != (/*L80*/2)))
                // Source line: 80
                {
                    // Source line: 81
                    (/*L81*/(/*L81*/io).putString((/*L81*/"Error: size should be 2 after removing Boolean\n")));
                    // Source line: 82
                    (/*L82*/(/*L82*/new Sys()).exit((/*L82*/1)));
                }
            else
                // Source line: 80
                {
                }
        // Source line: 84
        (/*L84*/(/*L84*/io).putString((/*L84*/"successful\n")));
        // Source line: 86
        (/*L86*/(/*L86*/io).putString((/*L86*/"Attempting to get String from Vector using elementAt(1)...")));
        // Source line: 87
        String s2 = (/*L87*/(String)((/*L87*/(/*L87*/v).elementAt((/*L87*/1)))));
        // Source line: 88
        if ((/*L88*/(/*L88*/s) != (/*L88*/s2)))
            // Source line: 88
            {
                // Source line: 89
                (/*L89*/(/*L89*/io).putString((/*L89*/"Error: second element String does not equal original\n")));
                // Source line: 90
                (/*L90*/(/*L90*/new Sys()).exit((/*L90*/1)));
            }
        else
            // Source line: 92
            if ((/*L92*/!((/*L92*/(/*L92*/v).contains((/*L92*/s2))))))
                // Source line: 92
                {
                    // Source line: 93
                    (/*L93*/(/*L93*/io).putString((/*L93*/"Error: Vector contains() failed to find String\n")));
                    // Source line: 94
                    (/*L94*/(/*L94*/new Sys()).exit((/*L94*/1)));
                }
            else
                // Source line: 92
                {
                }
        // Source line: 96
        (/*L96*/(/*L96*/io).putString((/*L96*/"successful\n")));
        // Source line: 97
        (/*L97*/(/*L97*/io).putString((/*L97*/"Attempting to remove String from Vector using removeElementAt(1)...")));
        // Source line: 98
        (/*L98*/(/*L98*/v).removeElementAt((/*L98*/1)));
        // Source line: 99
        if ((/*L99*/(/*L99*/v).contains((/*L99*/s2))))
            // Source line: 99
            {
                // Source line: 100
                (/*L100*/(/*L100*/io).putString((/*L100*/"Error: tried to remove String and still in the Vector\n")));
                // Source line: 101
                (/*L101*/(/*L101*/new Sys()).exit((/*L101*/1)));
            }
        else
            // Source line: 103
            if ((/*L103*/(/*L103*/(/*L103*/v).size()) != (/*L103*/1)))
                // Source line: 103
                {
                    // Source line: 104
                    (/*L104*/(/*L104*/io).putString((/*L104*/"Error: size should be 1 after removing String\n")));
                    // Source line: 105
                    (/*L105*/(/*L105*/new Sys()).exit((/*L105*/1)));
                }
            else
                // Source line: 103
                {
                }
        // Source line: 107
        (/*L107*/(/*L107*/io).putString((/*L107*/"successful\n")));
        // Source line: 109
        (/*L109*/(/*L109*/io).putString((/*L109*/"Attempting to get Integer from Vector using elementAt(0)...")));
        // Source line: 110
        Integer integer2 = (/*L110*/(Integer)((/*L110*/(/*L110*/v).elementAt((/*L110*/0)))));
        // Source line: 111
        if ((/*L111*/(/*L111*/integer) != (/*L111*/integer2)))
            // Source line: 111
            {
                // Source line: 112
                (/*L112*/(/*L112*/io).putString((/*L112*/"Error: second element Integer does not equal original\n")));
                // Source line: 113
                (/*L113*/(/*L113*/new Sys()).exit((/*L113*/1)));
            }
        else
            // Source line: 115
            if ((/*L115*/!((/*L115*/(/*L115*/v).contains((/*L115*/integer2))))))
                // Source line: 115
                {
                    // Source line: 116
                    (/*L116*/(/*L116*/io).putString((/*L116*/"Error: Vector contains() failed to find Integer\n")));
                    // Source line: 117
                    (/*L117*/(/*L117*/new Sys()).exit((/*L117*/1)));
                }
            else
                // Source line: 115
                {
                }
        // Source line: 119
        (/*L119*/(/*L119*/io).putString((/*L119*/"successful\n")));
        // Source line: 120
        (/*L120*/(/*L120*/io).putString((/*L120*/"Attempting to remove Integer from Vector using removeElementAt(0)...")));
        // Source line: 121
        (/*L121*/(/*L121*/v).removeElementAt((/*L121*/0)));
        // Source line: 122
        if ((/*L122*/(/*L122*/v).contains((/*L122*/integer2))))
            // Source line: 122
            {
                // Source line: 123
                (/*L123*/(/*L123*/io).putString((/*L123*/"Error: tried to remove Integer and still in the Vector\n")));
                // Source line: 124
                (/*L124*/(/*L124*/new Sys()).exit((/*L124*/1)));
            }
        else
            // Source line: 126
            if ((/*L126*/(/*L126*/(/*L126*/v).size()) != (/*L126*/0)))
                // Source line: 126
                {
                    // Source line: 127
                    (/*L127*/(/*L127*/io).putString((/*L127*/"Error: size should be 0 after removing Integer\n")));
                    // Source line: 128
                    (/*L128*/(/*L128*/new Sys()).exit((/*L128*/1)));
                }
            else
                // Source line: 126
                {
                }
        // Source line: 130
        (/*L130*/(/*L130*/io).putString((/*L130*/"successful\n")));
        // Source line: 132
        return;
    }
    // Source line: 135
    void test2() {
        // Source line: 136
        int max = (/*L136*/25);
        // Source line: 137
        int i = (/*L137*/(/*L137*/max) - (/*L137*/1));
        // Source line: 138
        (/*L138*/(/*L138*/io).putString((/*L138*/"Numbers unsorted:\n")));
        // Source line: 139
        while ((/*L139*/(/*L139*/i) >= (/*L139*/0)))
            // Source line: 139
            {
                // Source line: 140
                Integer integer = (/*L140*/(/*L140*/new Integer()).init((/*L140*/i)));
                // Source line: 141
                (/*L141*/(/*L141*/(/*L141*/io).putInt((/*L141*/i))).putString((/*L141*/"\n")));
                // Source line: 142
                (/*L142*/(/*L142*/v).addElement((/*L142*/integer)));
                // Source line: 143
                (/*L143*/i = (/*L143*/(/*L143*/i) - (/*L143*/1)));
            }
        // Source line: 146
        (/*L146*/i = (/*L146*/0));
        // Source line: 147
        while ((/*L147*/(/*L147*/i) < (/*L147*/max)))
            // Source line: 147
            {
                // Source line: 148
                int j = (/*L148*/(/*L148*/i) + (/*L148*/1));
                // Source line: 149
                while ((/*L149*/(/*L149*/j) < (/*L149*/max)))
                    // Source line: 149
                    {
                        // Source line: 150
                        Integer n1 = (/*L150*/(Integer)((/*L150*/(/*L150*/v).elementAt((/*L150*/i)))));
                        // Source line: 151
                        Integer n2 = (/*L151*/(Integer)((/*L151*/(/*L151*/v).elementAt((/*L151*/j)))));
                        // Source line: 152
                        if ((/*L152*/(/*L152*/(/*L152*/n1).intValue()) > (/*L152*/(/*L152*/n2).intValue())))
                            // Source line: 152
                            {
                                // Source line: 153
                                (/*L153*/(/*L153*/v).removeElementAt((/*L153*/i)));
                                // Source line: 154
                                (/*L154*/(/*L154*/v).addElementAt((/*L154*/n2), (/*L154*/i)));
                                // Source line: 155
                                (/*L155*/(/*L155*/v).removeElementAt((/*L155*/j)));
                                // Source line: 156
                                (/*L156*/(/*L156*/v).addElementAt((/*L156*/n1), (/*L156*/j)));
                            }
                        else
                            // Source line: 152
                            {
                            }
                        // Source line: 158
                        (/*L158*/j = (/*L158*/(/*L158*/j) + (/*L158*/1)));
                    }
                // Source line: 160
                (/*L160*/i = (/*L160*/(/*L160*/i) + (/*L160*/1)));
            }
        // Source line: 163
        (/*L163*/(/*L163*/io).putString((/*L163*/"Numbers sorted:\n")));
        // Source line: 164
        (/*L164*/i = (/*L164*/0));
        // Source line: 165
        while ((/*L165*/(/*L165*/i) < (/*L165*/max)))
            // Source line: 165
            {
                // Source line: 166
                Integer n = (/*L166*/(Integer)((/*L166*/(/*L166*/v).elementAt((/*L166*/i)))));
                // Source line: 167
                (/*L167*/(/*L167*/(/*L167*/io).putInt((/*L167*/(/*L167*/n).intValue()))).putString((/*L167*/"\n")));
                // Source line: 168
                (/*L168*/i = (/*L168*/(/*L168*/i) + (/*L168*/1)));
            }
        // Source line: 171
        return;
    }
}
// Source file: Vector.btm
// Source line: 5
class Vector extends Object {
    // Source line: 7
    TextIO io = 
(/*L7*/new TextIO());
    // Source line: 9
    Object[] elements = 
(/*L9*/new Object[(/*L9*/10)]);
    // Source line: 11
    int size = 
(/*L11*/0);
    // Source line: 17
    void error(/*line:17*/String message) {
        // Source line: 18
        (/*L18*/(/*L18*/(/*L18*/(/*L18*/io).putString((/*L18*/"Vector error: "))).putString((/*L18*/message))).putString((/*L18*/"\n")));
        // Source line: 19
        (/*L19*/(/*L19*/new Sys()).exit((/*L19*/1)));
        // Source line: 20
        return;
    }
    // Source line: 29
    void checkIndex(/*line:29*/int i, /*line:29*/String method, /*line:29*/boolean isSizeIncluded) {
        // Source line: 30
        if ((/*L30*/!((/*L30*/isSizeIncluded))))
            // Source line: 30
            {
                // Source line: 31
                if ((/*L31*/(/*L31*/(/*L31*/i) < (/*L31*/0)) || (/*L31*/(/*L31*/i) >= (/*L31*/size))))
                    // Source line: 31
                    {
                        // Source line: 32
                        (/*L32*/(/*L32*/(/*L32*/(/*L32*/io).putString((/*L32*/"Bad index '"))).putInt((/*L32*/i))).putString((/*L32*/"'\n")));
                        // Source line: 33
                        (/*L33*/(/*L33*/io).putString((/*L33*/"Index must be >= 0 and < size '")));
                        // Source line: 34
                        (/*L34*/(/*L34*/(/*L34*/io).putInt((/*L34*/size))).putString((/*L34*/"'\n")));
                        // Source line: 35
                        (/*L35*/(/*L35*/this).error((/*L35*/(/*L35*/"index out of bounds in method ").concat((/*L35*/method)))));
                    }
                else
                    // Source line: 31
                    {
                    }
            }
        else
            // Source line: 38
            {
                // Source line: 39
                if ((/*L39*/(/*L39*/(/*L39*/i) < (/*L39*/0)) || (/*L39*/(/*L39*/i) > (/*L39*/size))))
                    // Source line: 39
                    {
                        // Source line: 40
                        (/*L40*/(/*L40*/(/*L40*/(/*L40*/io).putString((/*L40*/"Bad index '"))).putInt((/*L40*/i))).putString((/*L40*/"'\n")));
                        // Source line: 41
                        (/*L41*/(/*L41*/io).putString((/*L41*/"Index must be >= 0 and <= size '")));
                        // Source line: 42
                        (/*L42*/(/*L42*/(/*L42*/io).putInt((/*L42*/size))).putString((/*L42*/"'\n")));
                        // Source line: 43
                        (/*L43*/(/*L43*/this).error((/*L43*/(/*L43*/"index out of bounds in method ").concat((/*L43*/method)))));
                    }
                else
                    // Source line: 39
                    {
                    }
            }
        // Source line: 47
        return;
    }
    // Source line: 53
    void resize() {
        // Source line: 54
        Object[] tmp = (/*L54*/new Object[(/*L54*/(/*L54*/(/*L54*/elements).length) * (/*L54*/2))]);
        // Source line: 55
        int i = (/*L55*/0);
        // Source line: 57
        while ((/*L57*/(/*L57*/i) < (/*L57*/(/*L57*/elements).length)))
            // Source line: 57
            {
                // Source line: 58
                (/*L58*/tmp[(/*L58*/i)] = (/*L58*/elements[(/*L58*/i)]));
                // Source line: 59
                (/*L59*/i = (/*L59*/(/*L59*/i) + (/*L59*/1)));
            }
        // Source line: 61
        (/*L61*/elements = (/*L61*/tmp));
        // Source line: 63
        return;
    }
    // Source line: 69
    int size() {
        // Source line: 70
        return (/*L70*/size);
    }
    // Source line: 77
    boolean contains(/*line:77*/Object o) {
        // Source line: 78
        boolean found = (/*L78*/false);
        // Source line: 79
        int i = (/*L79*/0);
        // Source line: 81
        while ((/*L81*/(/*L81*/i) < (/*L81*/size)))
            // Source line: 81
            {
                // Source line: 82
                if ((/*L82*/(/*L82*/elements[(/*L82*/i)]) == (/*L82*/o)))
                    // Source line: 83
                    (/*L83*/found = (/*L83*/true));
                else
                    // Source line: 82
                    {
                    }
                // Source line: 84
                (/*L84*/i = (/*L84*/(/*L84*/i) + (/*L84*/1)));
            }
        // Source line: 87
        return (/*L87*/found);
    }
    // Source line: 94
    Object elementAt(/*line:94*/int i) {
        // Source line: 95
        (/*L95*/(/*L95*/this).checkIndex((/*L95*/i), (/*L95*/"elementAt"), (/*L95*/false)));
        // Source line: 96
        return (/*L96*/elements[(/*L96*/i)]);
    }
    // Source line: 104
    Vector addElementAt(/*line:104*/Object o, /*line:104*/int i) {
        // Source line: 105
        (/*L105*/(/*L105*/this).checkIndex((/*L105*/i), (/*L105*/"addElementAt"), (/*L105*/true)));
        // Source line: 107
        if ((/*L107*/(/*L107*/size) == (/*L107*/(/*L107*/elements).length)))
            // Source line: 108
            (/*L108*/(/*L108*/this).resize());
        else
            // Source line: 107
            {
            }
        // Source line: 110
        int j = (/*L110*/size);
        // Source line: 111
        while ((/*L111*/(/*L111*/j) > (/*L111*/i)))
            // Source line: 111
            {
                // Source line: 112
                (/*L112*/elements[(/*L112*/j)] = (/*L112*/elements[(/*L112*/(/*L112*/j) - (/*L112*/1))]));
                // Source line: 113
                (/*L113*/j = (/*L113*/(/*L113*/j) - (/*L113*/1)));
            }
        // Source line: 115
        (/*L115*/elements[(/*L115*/i)] = (/*L115*/o));
        // Source line: 116
        (/*L116*/size = (/*L116*/(/*L116*/size) + (/*L116*/1)));
        // Source line: 118
        return (/*L118*/this);
    }
    // Source line: 126
    Vector setElementAt(/*line:126*/Object o, /*line:126*/int i) {
        // Source line: 127
        (/*L127*/(/*L127*/this).checkIndex((/*L127*/i), (/*L127*/"setElementAt"), (/*L127*/false)));
        // Source line: 128
        (/*L128*/(/*L128*/this).addElementAt((/*L128*/o), (/*L128*/i)));
        // Source line: 129
        (/*L129*/(/*L129*/this).removeElementAt((/*L129*/(/*L129*/i) + (/*L129*/1))));
        // Source line: 131
        return (/*L131*/this);
    }
    // Source line: 138
    Vector removeElementAt(/*line:138*/int i) {
        // Source line: 139
        (/*L139*/(/*L139*/this).checkIndex((/*L139*/i), (/*L139*/"removeElementAt"), (/*L139*/false)));
        // Source line: 141
        int j = (/*L141*/i);
        // Source line: 142
        while ((/*L142*/(/*L142*/(/*L142*/j) + (/*L142*/1)) < (/*L142*/size)))
            // Source line: 142
            {
                // Source line: 143
                (/*L143*/elements[(/*L143*/j)] = (/*L143*/elements[(/*L143*/(/*L143*/j) + (/*L143*/1))]));
                // Source line: 144
                (/*L144*/j = (/*L144*/(/*L144*/j) + (/*L144*/1)));
            }
        // Source line: 146
        (/*L146*/size = (/*L146*/(/*L146*/size) - (/*L146*/1)));
        // Source line: 148
        return (/*L148*/this);
    }
    // Source line: 155
    Vector addElement(/*line:155*/Object o) {
        // Source line: 156
        return (/*L156*/(/*L156*/this).addElementAt((/*L156*/o), (/*L156*/size)));
    }
    // Source line: 163
    Vector removeElement(/*line:163*/Object o) {
        // Source line: 164
        boolean removed = (/*L164*/false);
        // Source line: 165
        int i = (/*L165*/0);
        // Source line: 167
        while ((/*L167*/(/*L167*/(/*L167*/i) < (/*L167*/size)) && (/*L167*/!((/*L167*/removed)))))
            // Source line: 167
            {
                // Source line: 168
                if ((/*L168*/(/*L168*/elements[(/*L168*/i)]) == (/*L168*/o)))
                    // Source line: 168
                    {
                        // Source line: 169
                        int j = (/*L169*/i);
                        // Source line: 170
                        while ((/*L170*/(/*L170*/(/*L170*/j) + (/*L170*/1)) < (/*L170*/size)))
                            // Source line: 170
                            {
                                // Source line: 171
                                (/*L171*/elements[(/*L171*/j)] = (/*L171*/elements[(/*L171*/(/*L171*/j) + (/*L171*/1))]));
                            }
                        // Source line: 173
                        (/*L173*/size = (/*L173*/(/*L173*/size) - (/*L173*/1)));
                        // Source line: 174
                        (/*L174*/removed = (/*L174*/true));
                    }
                else
                    // Source line: 168
                    {
                    }
                // Source line: 176
                (/*L176*/i = (/*L176*/(/*L176*/i) + (/*L176*/1)));
            }
        // Source line: 179
        if ((/*L179*/!((/*L179*/removed))))
            // Source line: 180
            (/*L180*/(/*L180*/this).error((/*L180*/"element not found in vector")));
        else
            // Source line: 179
            {
            }
        // Source line: 182
        return (/*L182*/this);
    }
}
// Source file: Vector.btm
// Source line: 190
class VectorElement extends Object {
    // Source line: 192
    Object element;
    // Source line: 194
    VectorElement next;
    // Source line: 199
    Object getElement() {
        // Source line: 200
        return (/*L200*/element);
    }
    // Source line: 206
    VectorElement setElement(/*line:206*/Object o) {
        // Source line: 207
        (/*L207*/element = (/*L207*/o));
        // Source line: 208
        return (/*L208*/this);
    }
    // Source line: 214
    VectorElement getNext() {
        // Source line: 215
        return (/*L215*/next);
    }
    // Source line: 221
    VectorElement setNext(/*line:221*/VectorElement ve) {
        // Source line: 222
        (/*L222*/next = (/*L222*/ve));
        // Source line: 223
        return (/*L223*/this);
    }
}
// Source file: Boolean.btm
// Source line: 4
class Boolean extends Object {
    // Source line: 5
    boolean bool;
    // Source line: 6
    boolean booleanValue() {
        // Source line: 7
        return (/*L7*/bool);
    }
    // Source line: 9
    Boolean init(/*line:9*/boolean b) {
        // Source line: 10
        (/*L10*/bool = (/*L10*/b));
        // Source line: 11
        return (/*L11*/this);
    }
}
// Source file: Integer.btm
// Source line: 4
class Integer extends Object {
    // Source line: 5
    int num;
    // Source line: 6
    int intValue() {
        // Source line: 7
        return (/*L7*/num);
    }
    // Source line: 9
    Integer init(/*line:9*/int n) {
        // Source line: 10
        (/*L10*/num = (/*L10*/n));
        // Source line: 11
        return (/*L11*/this);
    }
}
