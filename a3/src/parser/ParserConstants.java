/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 1;
  /** RegularExpression Id. */
  int NEW = 2;
  /** RegularExpression Id. */
  int FOR = 3;
  /** RegularExpression Id. */
  int WHILE = 4;
  /** RegularExpression Id. */
  int EXTENDS = 5;
  /** RegularExpression Id. */
  int INSTANCEOF = 6;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int RETURN = 9;
  /** RegularExpression Id. */
  int BREAK = 10;
  /** RegularExpression Id. */
  int EQUALS = 11;
  /** RegularExpression Id. */
  int NOTEQUAL = 12;
  /** RegularExpression Id. */
  int LESSTHANOREQUALTO = 13;
  /** RegularExpression Id. */
  int GREATERTHANOREQUALTO = 14;
  /** RegularExpression Id. */
  int LESSTHAN = 15;
  /** RegularExpression Id. */
  int GREATERTHAN = 16;
  /** RegularExpression Id. */
  int INCREMENT = 17;
  /** RegularExpression Id. */
  int DECREMENT = 18;
  /** RegularExpression Id. */
  int NOT = 19;
  /** RegularExpression Id. */
  int AND = 20;
  /** RegularExpression Id. */
  int OR = 21;
  /** RegularExpression Id. */
  int LEFTBRACKET = 22;
  /** RegularExpression Id. */
  int RIGHTBRACKET = 23;
  /** RegularExpression Id. */
  int LEFTBRACE = 24;
  /** RegularExpression Id. */
  int RIGHTBRACE = 25;
  /** RegularExpression Id. */
  int LEFTPAREN = 26;
  /** RegularExpression Id. */
  int RIGHTPAREN = 27;
  /** RegularExpression Id. */
  int ASSIGN = 28;
  /** RegularExpression Id. */
  int SEMICOLON = 29;
  /** RegularExpression Id. */
  int COLON = 30;
  /** RegularExpression Id. */
  int MINUS = 31;
  /** RegularExpression Id. */
  int PLUS = 32;
  /** RegularExpression Id. */
  int MULT = 33;
  /** RegularExpression Id. */
  int DIVIDE = 34;
  /** RegularExpression Id. */
  int MOD = 35;
  /** RegularExpression Id. */
  int DOT = 36;
  /** RegularExpression Id. */
  int COMMA = 37;
  /** RegularExpression Id. */
  int ANNOTATION = 38;
  /** RegularExpression Id. */
  int INT_CONST = 39;
  /** RegularExpression Id. */
  int BOOLEAN_CONST = 40;
  /** RegularExpression Id. */
  int STRING_CONST = 41;
  /** RegularExpression Id. */
  int ID = 42;
  /** RegularExpression Id. */
  int BADSTRING = 48;
  /** RegularExpression Id. */
  int UNSUPPORTEDCHAR = 49;
  /** RegularExpression Id. */
  int BADCOMMENT = 50;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"class\"",
    "\"new\"",
    "\"for\"",
    "\"while\"",
    "\"extends\"",
    "\"instanceof\"",
    "\"if\"",
    "\"else\"",
    "\"return\"",
    "\"break\"",
    "\"==\"",
    "\"!=\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"++\"",
    "\"--\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\";\"",
    "\":\"",
    "\"-\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\".\"",
    "\",\"",
    "\"@\"",
    "<INT_CONST>",
    "<BOOLEAN_CONST>",
    "<STRING_CONST>",
    "<ID>",
    "<token of kind 43>",
    "<token of kind 44>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\\"\"",
    "<UNSUPPORTEDCHAR>",
    "\"/*\"",
  };

}
