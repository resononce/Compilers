// Source file: CountDivisors.btm
// Source line: 5
class Main extends Object {
    // Source line: 7
    void main() {
        // Source line: 8
        TextIO io = (/*L8,type:TextIO*/new TextIO());
        // Source line: 9
        int upperBound = (/*L9,type:int*/1);
        // Source line: 10
        int numWithMostDivisors = (/*L10,type:int*/0);
        // Source line: 11
        int maxDivisors = (/*L11,type:int*/0);
        // Source line: 13
        (/*L13,type:int*/upperBound = (/*L13,type:int*/(/*L13,type:TextIO*/(/*L13,type:TextIO*/io).putString((/*L13,type:String*/"Enter a number >= 1: "))).getInt()));
        // Source line: 14
        if ((/*L14,type:boolean*/(/*L14,type:int*/upperBound) < (/*L14,type:int*/1)))
            // Source line: 14
            {
                // Source line: 15
                (/*L15,type:TextIO*/(/*L15,type:TextIO*/io).putString((/*L15,type:String*/"Number must be >= 1")));
                // Source line: 16
                (/*L16,type:void*/(/*L16,type:Sys*/new Sys()).exit((/*L16,type:int*/1)));
            }
        else
            // Source line: 14
            {
            }
        // Source line: 20
        int i = (/*L20,type:int*/1);
        // Source line: 21
        while ((/*L21,type:boolean*/(/*L21,type:int*/i) <= (/*L21,type:int*/upperBound)))
            // Source line: 21
            {
                // Source line: 23
                int numDivisors = (/*L23,type:int*/0);
                // Source line: 24
                int j = (/*L24,type:int*/1);
                // Source line: 25
                while ((/*L25,type:boolean*/(/*L25,type:int*/j) <= (/*L25,type:int*/i)))
                    // Source line: 25
                    {
                        // Source line: 27
                        if ((/*L27,type:boolean*/(/*L27,type:int*/(/*L27,type:int*/i) % (/*L27,type:int*/j)) == (/*L27,type:int*/0)))
                            // Source line: 28
                            (/*L28,type:int*/numDivisors = (/*L28,type:int*/(/*L28,type:int*/numDivisors) + (/*L28,type:int*/1)));
                        else
                            // Source line: 27
                            {
                            }
                        // Source line: 29
                        (/*L29,type:int*/j = (/*L29,type:int*/(/*L29,type:int*/j) + (/*L29,type:int*/1)));
                    }
                // Source line: 34
                if ((/*L34,type:boolean*/(/*L34,type:int*/numDivisors) > (/*L34,type:int*/maxDivisors)))
                    // Source line: 34
                    {
                        // Source line: 35
                        (/*L35,type:int*/numWithMostDivisors = (/*L35,type:int*/i));
                        // Source line: 36
                        (/*L36,type:int*/maxDivisors = (/*L36,type:int*/numDivisors));
                    }
                else
                    // Source line: 34
                    {
                    }
                // Source line: 39
                (/*L39,type:int*/i = (/*L39,type:int*/(/*L39,type:int*/i) + (/*L39,type:int*/1)));
            }
        // Source line: 43
        (/*L43,type:TextIO*/(/*L43,type:TextIO*/(/*L43,type:TextIO*/(/*L43,type:TextIO*/io).putString((/*L43,type:String*/"Number with most divisors: "))).putInt((/*L43,type:int*/numWithMostDivisors))).putString((/*L43,type:String*/"\n")));
        // Source line: 44
        (/*L44,type:TextIO*/(/*L44,type:TextIO*/(/*L44,type:TextIO*/(/*L44,type:TextIO*/io).putString((/*L44,type:String*/"Number of divisors: "))).putInt((/*L44,type:int*/maxDivisors))).putString((/*L44,type:String*/"\n")));
        // Source line: 46
        return;
    }
}
